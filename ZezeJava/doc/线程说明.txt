Zeze框架相关线程说明
------------------------------------------------------------------------------
线程名:   ZezeTaskPool-X
          X: 序号(从1开始)
所有者:   Zeze.Util.Task.threadPoolDefault
获取方法: Zeze.Util.Task.getThreadPool()
线程数量: zeze.xml根元素的属性"WorkerThreads" 默认: CPU核数*30,
          GlobalCacheManager服务器和ServiceManager服务器默认240
任务队列: LinkedBlockingQueue
优先级:   普通
后台线程: 是
用途:
1. Zeze.Util.Task.run/Run
2. Zeze.UtilTaskOneByOneByKey.Execute
------------------------------------------------------------------------------
线程名:   ZezeScheduledPool-X
          X: 序号(从1开始)
所有者:   Zeze.Util.Task.threadPoolScheduled
获取方法: Zeze.Util.Task.getScheduledThreadPool()
线程数量: zeze.xml根元素的属性"ScheduledThreads" 默认: CPU核数*15
          GlobalCacheManager服务器和ServiceManager服务器默认120
优先级:   普通
后台线程: 是
用途:
1. Zeze.Util.Task.schedule
------------------------------------------------------------------------------
线程名:   ZezeInternalPool-X-thread-Y
          X: 服务器ID
          Y: 序号(从1开始)
所有者:   Zeze.Application.InternalThreadPool
获取方法: Zeze.Application.__GetInternalThreadPoolUnsafe()
线程数量: zeze.xml根元素的属性"InternalThreadPoolWorkerCount" 默认: 10
任务队列: LinkedBlockingQueue
优先级:   普通
后台线程: 是
用途:
1. GlobalCacheServer的客户端(Zeze.Transaction.GlobalClient)处理协议
2. ServiceManager的客户端(Zeze.Services.ServiceManager.AgentClient)处理协议
3. Raft客户端(Zeze.Raft.Agent.NetClient)处理LeaderIs协议和RPC的回复
------------------------------------------------------------------------------
线程名:   SelectorThread-X
          X: 序号(从0开始)
所有者:   Zeze.Net.Selectors.SelectorList
获取方法: 无, 只能通过Zeze.Net.Selectors.choice()依次选择Selector
线程数量: min(CPU核数,8)
优先级:   普通
后台线程: 是
用途:
1. selector.select -> SelectorHandle(AsyncSocket) -> Service -> Dispatch
------------------------------------------------------------------------------
线程名:   CheckpointThread-X
          X: 服务器ID
所有者:   Zeze.Transaction.Checkpoint.CheckpointThread
获取方法: 无, 只能通过Zeze.Transaction.Checkpoint.AddActionAndPulse添加任务
线程数量: 每个服一个单线程(非线程池)
任务队列: LinkedBlockingQueue
优先级:   普通
后台线程: 是
用途:
1. 定时执行checkpoint相关任务
------------------------------------------------------------------------------
线程名:   main
线程数量: 1
优先级:   普通
后台线程: 否
用途:
1. 主线程, 初始化后一直等待直到进程中断
------------------------------------------------------------------------------
