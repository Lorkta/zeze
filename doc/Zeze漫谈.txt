
Zeze漫谈
------------------------------------------------------------------------------------------------------------

简介
	Zeze是一个嵌入开发语言的分布式事务框架。

思想和规则
	简单
	直接
	暴力
	不扣内存
		以前非常注意内存，就想着少定义变量，能合并的标志位都用flags表示，现在是能分开分开。
	耦合，综合上面的形成了这一点，或解开或合并，没有纯粹单一的规则。
	刚好原则
		考虑未来，但不多做东西，需要的时候再来添加。
	分层思路、二的魔法
		需要分级，但只分二级。

庞大的class Record
	Record最早只是Cache中的一个数据，后来所有相关功能需要的时候，都会在Record里面加上自己的状态。现在已经变得很庞大。

单点的Global
	这个算法是非常暴力的，核心出发点就是Global是全能的，知道所有东西。所以算法也非常直接简单。

关联记录集合
	2008年就有初步想法，当时每个事务一个关联集合，不敢马上合并，觉得效率不够。
	目前的做法是事务提交的时候，马上合并到关联记录集合中，提交慢一些，但是checkpoint保存的逻辑变得非常简单，结构也清晰。		

Listener
	现在采取完全独立的算法和规则来实现，变得清晰了。但是耦合也不是都变清晰了，有些地方变得更野蛮了。
	对像耦合想法的变动，为了能省代码或者公用变量关系，总是希望能一次做完所有的事情，这导致部分功能糅合到一起了。

RocksDb 用错了

一些历史
	乐观锁来自黄强的一个版本，虽然只有不到200行代码，但是精华所在啊。
	Service的概念来自曾攀的c++-share库，以前叫Manager，觉得叫Service更像是网络相关的东西就改名了。这个概念也符合简单暴力原则。

