<?xml version="1.0" encoding="utf-8"?>

<solution name="Zege" ModuleIdAllowRanges="1-1000">
	<import file="solution.linkd.xml"/>
	<import file="../ZezeJava/ZezeJava/solution.zeze.xml"/>

	<module name="User" id="1">
		修改 id 必须同时修改 solution.linkd.xml:Zezex.Linkd.BAuth.ProviderUserModuleId. Linkd转发需要知道。

		<bean name="BUser">
			<!-- 基本信息 -->
			<variable id="1" name="Account"    type="string" />
			<variable id="2" name="Type"       type="int" />
			<variable id="3" name="CreateTime" type="long" />
			<variable id="4" name="NickName"   type="string" /> 不唯一

			<!-- 验证 -->
			<variable id="20" name="SecureKeys" type="map" key="int" value="binary" />

			<!-- 实名 -->
			<enum name="RealFlagIdentityCard" value="1" />
			<enum name="RealFlagPhone"        value="2" />
			<enum name="RealFlagBankCard"     value="4" />
			<enum name="RealFlagFaceToFace"   value="8" />

			<variable id="30" name="RealFlags"    type="long" />
			<variable id="31" name="RealName"     type="string" />

			<variable id="32" name="IdentityCard" type="string" /> 和账号一一对应
			<variable id="33" name="Phone"        type="string" /> 一个phone可以对应多个账号，有上限
			<variable id="34" name="BankCard"     type="list" value="string" />
			<variable id="35" name="FaceToFace"   type="bool" /> 当面认证(银行合作，付费？)，保存视频照片等认证记录，需要 IdentityCard 和 MobilePhone，可以不用绑定银行卡。
		</bean>

		<bean name="BAccount">
			<variable id="1" name="Account"  type="string" />
		</bean>

		<bean name="BAccounts">
			<variable id="1" name="Accounts"  type="set" value="string" />
		</bean>

		<table name="tUser"         key="string" value="BUser" /> key is account
		<table name="tIdentiryCard" key="string" value="BAccount" /> key is identirycard
		<table name="tPhone"        key="string" value="BAccounts" /> key is phone

		<protocolref ref="Zege.Linkd.Auth" />

		<!-- Rsa 签字验证 -->
		<bean name="BTokenRsa">
			<variable id="1" name="Sign" type="binary" />
			<variable id="2" name="SecureKeyIndex" type="int" />
		</bean>

		<!-- 短信验证 -->
		<bean name="BTokenPhoneMessage">
			<variable id="1" name="Message" type="string" />
		</bean>
	</module>

	<module name="Friend" id="2">
		<!-- 好友列表用 Zeze.Collections.LinkedMap -->
		<!-- 部门树用 Zeze.Collections.DepartmentTree -->
		
	</module>

	<module name="Message" id="3">
		<bean name="BMessageRoot">
			<variable id="1" name="SeedMessageId" type="long" />
			<variable id="2" name="FirstMessageId" type="long" />
			<variable id="3" name="LastMessageId" type="long" />

			多个客户端同时登录时，一个设置，其他得到已读通知。
			已读的条件是消息同步发送给客户端就算已读？参考客户端实现。
			<variable id="4" name="LastReadedMessageId" type="long" />

			<variable id="5" name="MessageTotalBytes" type="long" />
		</bean>

		<bean name="BMessage">
		</bean>
		
		<!-- 好友消息历史 -->
		<beankey name="BFriendMessageKey">
			<variable id="1" name="Owner" type="string" />
			<variable id="2" name="Friend" type="string" />
			<variable id="3" name="MessageId" type="long" />
		</beankey>
		<beankey name="BFriendKey">
			<variable id="1" name="Owner" type="string" />
			<variable id="2" name="Friend" type="string" />
		</beankey>

		<table name="tFriendMessage" key="BFriendKey" value="BMessageRoot" />
		<table name="tFriendMessages" key="BFriendMessageKey" value="BMessage" />

		<!-- 群（部门）消息历史 -->
		<beankey name="BDepartmentKey">
			<variable id="1" name="Owner" type="string" />
			<variable id="2" name="DepartmentId" type="long" />
		</beankey>
		<beankey name="BDepartmentMessageKey">
			<variable id="1" name="Owner" type="string" />
			<variable id="2" name="DepartmentId" type="long" />
			<variable id="3" name="MessageId" type="long" />
		</beankey>
		<table name="tDepartementMessage" key="BDepartmentKey" value="BMessageRoot" />
		<table name="tDepartementMessages" key="BDepartmentMessageKey" value="BMessage" />
	</module>

	<project name="server" gendir="." scriptdir="src" platform="java" GenTables="">
		<!--
		这里引用的模块不该定义协议，定义了也不会被生成，一般为纯逻辑或者数据库模块。
		<module ref="CommonModule"/>
		-->
		<!-- service 生成到 solution 名字空间下 -->
		<service name="Server" handle="server" base="Zeze.Arch.ProviderService">
			<module ref="User"/>
			<module ref="Friend"/>
			<module ref="Message"/>
		</service>

		<ModuleStartOrder>
		</ModuleStartOrder>

		<service name="ServerDirect" handle="server,client" base="Zeze.Arch.ProviderDirectService">
		</service>
	</project>

	<project name="client" gendir="." scriptdir="src" platform="java" BuiltinNG="true">
		<service name="ClientService" handle="client" base="Zeze.Services.HandshakeClient">
			<module ref="Zeze.Builtin.Online"/>
			<module ref="Zeze.Builtin.LinkdBase"/>
			<module ref="Zege.Linkd"/>
		</service>
	</project>

</solution>
