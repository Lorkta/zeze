
#### TODO

Zeze
	打包和更新工具
	async await?
	GlobalTaskOneByOneByKey？？？
	AsyncSocket.Connect Timeout 可配置，不是很有必要，外面需要同步等待时，可以设置自己的等待时间，不需要依赖Socket.Timeout。
	lua beankey 问题。

Zezex
	client: 可靠消息实现的错误检查。
	Bag里面的Money移走。
	根据新的 solution-name 拷贝并替换代码中Game的名字空间。
	麻烦的地方：根据客户端是否脚本需要替换协议中的handle：client->clientscript。

ConfigEditor
	自动完成: Foreign
	自动完成：id Load 的时候记录 maxid，以后编辑AddRow都使用这个递增。
	更多自动完成？普通的列默认最近使用的n个值，根据输入在列中查找最匹配的。
	增加一个工作线程，所有数据操作都放到这里面，和UI线程交互。看情况再决定做不做。
	enum 现在不支持引用在其他文档定义的，有需要了再来加。

GlobalCacheManagerWithRaft
	优化。改成一次AppendLog。
	关键：CacheState.AcquireStatePending 仅在Leader上使用，不需要同步到Follower。

DatabaseRocksDb
	OperatesRocksDb
	atomic flush
DatabaseTikv
	OperatesTikv

Raft.Agent
	重发现在在收到LeaderIs时马上重新发送。改成延迟？
	Agent的请求lost context，但是Task.Wait怎么返回的。

war？
	一个module集合。
	定义export？private？
	App.Instance？生成代码使用基类，不再使用具体类型，实际上就是把具体类型的功能尽量放到基类。
	感觉没必要：应用使用独立进程更加安全灵活些。

Connector.WaitReady
	GlobalAgent 重构？

Record.State
	xdb 旧版的状态看来需要恢复。
	这是为了优化这种情况： add, 并且在 checkpoint 之前就 remove.
	此时应该不需要调用 db.remove。严格的状态可以优化掉所有的不必要的对db的操作。

Raft
  增加ConcurrentMapOnRocksDb
GlobalCacheManagerWithRaft
  改成ConcurrentMapOnRocksDb
