如果实现开放地图的游戏，涉及到地图中玩家信息同步。

如果地图服务器不装载3d场景信息，只是做简单的2d范围通告，那么没必要建立独立进程。
把相关功能合并到逻辑服务器内即可。

如果使用了unreal-server或者unity3d后台模式来当作地图服务器的话，那就和3d引擎相关。
这种应该可以实现碰撞等验证，没有性能问题的话，也算是个解决方案。
采用这种方案的地图服务器，和Zeze配合的话，需要把地图相关功能和普通逻辑功能做一个好的划分。

另外服务器如果不直接支持碰撞和nav-mesh寻路，可以仅仅把客户端的结果拿去验证。
有个思路，1 抽样验证；2 验证的时候随机选择几个客户端来执行验证，防止单个客户端作弊。
服务器有寻路需求的时候也可以选择客户端帮忙做。
